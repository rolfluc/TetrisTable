//********************************************
//************Project Build*******************
//********************************************


In order to build this project, I used a set of tools to do so.

1.)MPLAB X 	v1.32
2.)
3.)


//********************************************
//***************Overview ********************
//********************************************


This project will contain at minimum 800 LED's. These LED's consist of WS2812's since they are individually addressable, and can be put in a string. For this, there will be 8 strings of 100 LED's. 

The port that will be used is .  is used since is used for button interrupts, needed for the external switches.

From a software perspective, all that needs to be done is to send bit streams via , and then compute tetris. The following section will be dedicated to the plan on how to get the WS2812b's working.

//********************************************
//*************LED Segment********************
//********************************************

For the bit timings for the WS2812B, it goes as follows:
0 bit: 0.40us HI, 0.85us LO
1 bit: 0.80us HI, 0.45us LO, 
Each bit timing is +/- 0.15us
RES:  50us

The RES signal is defined as the in between timing for ending of sending data. So after a long string of 24 bit segments are sent; >50us must be waited before another color can be set for each LED.

In order for consistancies sake, and more accurate timing; the timing will be relaxed in order to provide more direct timing. Here is how it will be used.

0 bit: 0.40us HI, 0.80us LO
1 bit: 0.80us HI, 0.40us LO, 
Each bit timing is +/- 0.10us
RES:  50us

This approach is considered accurate since it removes 0.05us of timing, which is well within this requirement.  This however means that it must be more precise when written.

This will be accomplished by running this segment directly through; without stopping for any other segment.


To send the stream of bits, a 100 d-word (uint32_t) array will be used. It is 8 bits too long for each color, since there is 8-bits associated with each color in the order of:G,R,B.

The total time to run the WS2812b code will be as such:

Each bit will take:					1.2us
Each LED will take:					28.8us
Each string of 100 will take:		2.93ms (with the 50us reset time)

//********************************************
//*********Board Organization*****************
//********************************************
[0][0]
200		199		198		197		196		195		194		193		192		191
190		189		188		187		186		185		184		183		182		181
180		179		178		177		176		175		174		173		172		171
170		169		168		167		166		165		164		163		162		161
160		159		158		157		156		155		154		153		152		151
150		149		148		147		146		145		144		143		142		141
140		139		138		137		136		135		134		133		132		131
130		129		128		127		126		125		124		123		122		121
120		119		118		117		116		115		114		113		112		111
110		109		108		107		106		105		104		103		102		101
100		99		98		97		96		95		94		93		92		91
90		89		88		87		86		85		84		83		82		81
80		79		78		77		76		75		74		73		72		71
70		69		68		67		66		65		64		63		62		61
60		59		58		57		56		55		54		53		52		51
50		49		48		47		46		45		44		43		42		41
40		39		38		37		36		35		34		33		32		31
30		29		28		27		26		25		24		23		22		21
20		19		18		17		16		15		14		13		12		11
10		09		08		07		06		05		04		03		02		01 	
																		[19][9]

The board needs to be placed into a contiguous memory location, except 3x the size.
This is because each bit needs to be split into three different