

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Sat Jul 19 15:21:24 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18  0000                     _INTCON2bits	set	4081
    19  0000                     _INTCONbits	set	4082
    20  0000                     _IPR1bits	set	3999
    21  0000                     _OSCCON	set	4051
    22  0000                     _OSCTUNE	set	3995
    23  0000                     _PIE1bits	set	3997
    24  0000                     _PIR1bits	set	3998
    25  0000                     _PORTB	set	3969
    26  0000                     _PORTD	set	3971
    27  0000                     _RCONbits	set	4048
    28  0000                     _T1CON	set	4045
    29  0000                     _T1CONbits	set	4045
    30  0000                     _T2CON	set	4042
    31  0000                     _T2CONbits	set	4042
    32  0000                     _TMR1H	set	4047
    33  0000                     _TMR1L	set	4046
    34  0000                     _TMR2	set	4044
    35  0000                     _TRISB	set	3987
    36  0000                     _TRISD	set	3989
    37                           
    38                           ; 0 bytes @ 0x28
    39 ;;
    40 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    41 ;;
    42 ;; *************** function _main *****************
    43 ;; Defined at:
    44 ;;		line 73 in file "main.c"
    45 ;; Parameters:    Size  Location     Type
    46 ;;		None
    47 ;; Auto vars:     Size  Location     Type
    48 ;;		None
    49 ;; Return value:  Size  Location     Type
    50 ;;		None               void
    51 ;; Registers used:
    52 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
    53 ;; Tracked objects:
    54 ;;		On entry : 0/0
    55 ;;		On exit  : 0/0
    56 ;;		Unchanged: 0/0
    57 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
    58 ;;      Params:         0       0       0       0       0       0       0       0       0
    59 ;;      Locals:         0       0       0       0       0       0       0       0       0
    60 ;;      Temps:          0       0       0       0       0       0       0       0       0
    61 ;;      Totals:         0       0       0       0       0       0       0       0       0
    62 ;;Total ram usage:        0 bytes
    63 ;; Hardware stack levels required when called:    4
    64 ;; This function calls:
    65 ;;		_setup
    66 ;;		_tmr2On
    67 ;; This function is called by:
    68 ;;		Startup code after reset
    69 ;; This function uses a non-reentrant model
    70 ;;
    71                           
    72                           	psect	text0
    73  000298                     __ptext0:
    74                           	opt stack 0
    75  000298                     _main:
    76                           	opt stack 27
    77                           
    78                           ;main.c: 75: setup();
    79                           
    80                           ;incstack = 0
    81  000298  ECCD  F000         	call	_setup	;wreg free
    82                           
    83                           ;main.c: 76: tmr2On();
    84  00029C  EC51  F001         	call	_tmr2On	;wreg free
    85  0002A0                     l46:
    86                           
    87                           ;main.c: 78: {
    88  0002A0  D7FF               	goto	l46
    89  0002A2                     __end_of_main:
    90                           	opt stack 0
    91                           
    92                           	psect	cinit
    93  00027A                     __pcinit:
    94                           	opt stack 0
    95  00027A                     start_initialization:
    96                           	opt stack 0
    97  00027A                     __initialization:
    98                           	opt stack 0
    99                           
   100                           ; Clear objects allocated to BANK1 (200 bytes)
   101  00027A  EE01  F000         	lfsr	0,__pbssBANK1
   102  00027E  0EC8               	movlw	200
   103  000280                     clear_0:
   104  000280  6AEE               	clrf	postinc0,c
   105  000282  06E8               	decf	wreg,f,c
   106  000284  E1FD               	bnz	clear_0
   107                           
   108                           ; Clear objects allocated to COMRAM (51 bytes)
   109  000286  EE00  F001         	lfsr	0,__pbssCOMRAM
   110  00028A  0E33               	movlw	51
   111  00028C                     clear_1:
   112  00028C  6AEE               	clrf	postinc0,c
   113  00028E  06E8               	decf	wreg,f,c
   114  000290  E1FD               	bnz	clear_1
   115  000292                     end_of_initialization:
   116                           	opt stack 0
   117  000292                     __end_of__initialization:
   118                           	opt stack 0
   119  000292  0100               	movlb	0
   120  000294  EF4C  F001         	goto	_main	;jump to C main() function
   121                           postinc0	equ	0xFEE
   122                           wreg	equ	0xFE8
   123                           
   124                           	psect	bssCOMRAM
   125  000001                     __pbssCOMRAM:
   126                           	opt stack 0
   127  000001                     _current_height:
   128                           	opt stack 0
   129  000001                     	ds	40
   130  000029                     _b_value:
   131                           	opt stack 0
   132  000029                     	ds	10
   133  000033                     _b_buf_ptr:
   134                           	opt stack 0
   135  000033                     	ds	1
   136                           postinc0	equ	0xFEE
   137                           wreg	equ	0xFE8
   138                           
   139                           	psect	bssBANK1
   140  000100                     __pbssBANK1:
   141                           	opt stack 0
   142  000100                     _block_coding:
   143                           	opt stack 0
   144  000100                     	ds	200
   145                           postinc0	equ	0xFEE
   146                           wreg	equ	0xFE8
   147                           
   148                           	psect	cstackCOMRAM
   149  000034                     __pcstackCOMRAM:
   150                           	opt stack 0
   151  000034                     ?___awmod:
   152                           	opt stack 0
   153  000034                     ___awmod@dividend:
   154                           	opt stack 0
   155                           
   156                           ; 2 bytes @ 0x0
   157  000034                     	ds	2
   158  000036                     ___awmod@divisor:
   159                           	opt stack 0
   160                           
   161                           ; 2 bytes @ 0x2
   162  000036                     	ds	2
   163  000038                     ___awmod@counter:
   164                           	opt stack 0
   165                           
   166                           ; 1 bytes @ 0x4
   167  000038                     	ds	1
   168  000039                     ___awmod@sign:
   169                           	opt stack 0
   170                           
   171                           ; 1 bytes @ 0x5
   172  000039                     	ds	1
   173  00003A                     ??_low_interrupt:
   174                           
   175                           ; 0 bytes @ 0x6
   176  00003A                     	ds	17
   177  00004B                     ??_high_interrupt:
   178                           
   179                           ; 0 bytes @ 0x17
   180  00004B                     	ds	14
   181  000059                     setup@index:
   182                           	opt stack 0
   183                           
   184                           ; 1 bytes @ 0x25
   185  000059                     	ds	1
   186  00005A                     setup@index_192:
   187                           	opt stack 0
   188                           
   189                           ; 1 bytes @ 0x26
   190  00005A                     	ds	1
   191  00005B                     setup@index_193:
   192                           	opt stack 0
   193                           
   194                           ; 1 bytes @ 0x27
   195  00005B                     	ds	1
   196  00005C                     postinc0	equ	0xFEE
   197                           wreg	equ	0xFE8
   198                           
   199 ;; *************** function _tmr2On *****************
   200 ;; Defined at:
   201 ;;		line 62 in file "setupFunctions.c"
   202 ;; Parameters:    Size  Location     Type
   203 ;;		None
   204 ;; Auto vars:     Size  Location     Type
   205 ;;		None
   206 ;; Return value:  Size  Location     Type
   207 ;;		None               void
   208 ;; Registers used:
   209 ;;		None
   210 ;; Tracked objects:
   211 ;;		On entry : 0/0
   212 ;;		On exit  : 0/0
   213 ;;		Unchanged: 0/0
   214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   215 ;;      Params:         0       0       0       0       0       0       0       0       0
   216 ;;      Locals:         0       0       0       0       0       0       0       0       0
   217 ;;      Temps:          0       0       0       0       0       0       0       0       0
   218 ;;      Totals:         0       0       0       0       0       0       0       0       0
   219 ;;Total ram usage:        0 bytes
   220 ;; Hardware stack levels used:    1
   221 ;; Hardware stack levels required when called:    3
   222 ;; This function calls:
   223 ;;		Nothing
   224 ;; This function is called by:
   225 ;;		_main
   226 ;; This function uses a non-reentrant model
   227 ;;
   228                           
   229                           	psect	text1
   230  0002A2                     __ptext1:
   231                           	opt stack 0
   232  0002A2                     _tmr2On:
   233                           	opt stack 27
   234                           
   235                           ;setupFunctions.c: 64: T2CONbits.TMR2ON = 1;
   236                           
   237                           ;incstack = 0
   238  0002A2  84CA               	bsf	4042,2,c	;volatile
   239  0002A4  0012               	return	
   240  0002A6                     __end_of_tmr2On:
   241                           	opt stack 0
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           
   245 ;; *************** function _setup *****************
   246 ;; Defined at:
   247 ;;		line 50 in file "main.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;		None
   250 ;; Auto vars:     Size  Location     Type
   251 ;;  index           1   39[COMRAM] unsigned char 
   252 ;;  index           1   38[COMRAM] unsigned char 
   253 ;;  index           1   37[COMRAM] unsigned char 
   254 ;; Return value:  Size  Location     Type
   255 ;;		None               void
   256 ;; Registers used:
   257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   258 ;; Tracked objects:
   259 ;;		On entry : 0/0
   260 ;;		On exit  : 0/0
   261 ;;		Unchanged: 0/0
   262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   263 ;;      Params:         0       0       0       0       0       0       0       0       0
   264 ;;      Locals:         3       0       0       0       0       0       0       0       0
   265 ;;      Temps:          0       0       0       0       0       0       0       0       0
   266 ;;      Totals:         3       0       0       0       0       0       0       0       0
   267 ;;Total ram usage:        3 bytes
   268 ;; Hardware stack levels used:    1
   269 ;; Hardware stack levels required when called:    3
   270 ;; This function calls:
   271 ;;		Nothing
   272 ;; This function is called by:
   273 ;;		_main
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           	psect	text2
   278  00019A                     __ptext2:
   279                           	opt stack 0
   280  00019A                     _setup:
   281                           	opt stack 27
   282                           
   283                           ;main.c: 53: for (unsigned char index = 0; index < 200 * 1; index++)
   284                           
   285                           ;incstack = 0
   286  00019A  0E00               	movlw	0
   287  00019C  6E59               	movwf	setup@index,c
   288  00019E  D00D               	goto	L1
   289  0001A0                     l713:
   290                           
   291                           ;main.c: 54: {
   292                           ;main.c: 55: block_coding[index] = 0;
   293  0001A0  5059               	movf	setup@index,w,c
   294  0001A2  0D01               	mullw	1
   295  0001A4  0101               	movlb	1	; () banked
   296  0001A6  0E00               	movlw	low _block_coding
   297  0001A8  24F3               	addwf	prodl,w,c
   298  0001AA  6ED9               	movwf	fsr2l,c
   299  0001AC  0101               	movlb	1	; () banked
   300  0001AE  0E01               	movlw	high _block_coding
   301  0001B0  20F4               	addwfc	prodh,w,c
   302  0001B2  6EDA               	movwf	fsr2h,c
   303  0001B4  0E00               	movlw	0
   304  0001B6  6EDF               	movwf	indf2,c
   305                           
   306                           ; BSR set to: 1
   307  0001B8  2A59               	incf	setup@index,f,c
   308  0001BA                     L1:
   309                           
   310                           ; BSR set to: 1
   311  0001BA  0EC7               	movlw	199
   312  0001BC  6459               	cpfsgt	setup@index,c
   313  0001BE  D7F0               	goto	l713
   314                           
   315                           ;main.c: 56: }
   316                           ;main.c: 57: for (unsigned char index = 0; index < 10; index++)
   317                           
   318                           ; BSR set to: 1
   319  0001C0  0E00               	movlw	0
   320  0001C2  6E5A               	movwf	setup@index_192,c
   321  0001C4  D00D               	goto	L2
   322  0001C6                     l725:
   323                           
   324                           ;main.c: 58: {
   325                           ;main.c: 59: current_height[index] = 0;
   326  0001C6  505A               	movf	setup@index_192,w,c
   327  0001C8  0D02               	mullw	2
   328  0001CA  0E01               	movlw	low _current_height
   329  0001CC  24F3               	addwf	prodl,w,c
   330  0001CE  6ED9               	movwf	fsr2l,c
   331  0001D0  0E00               	movlw	high _current_height
   332  0001D2  20F4               	addwfc	prodh,w,c
   333  0001D4  6EDA               	movwf	fsr2h,c
   334  0001D6  0E00               	movlw	0
   335  0001D8  6EDE               	movwf	postinc2,c
   336  0001DA  0E00               	movlw	0
   337  0001DC  6EDD               	movwf	postdec2,c
   338  0001DE  2A5A               	incf	setup@index_192,f,c
   339  0001E0                     L2:
   340  0001E0  0E09               	movlw	9
   341  0001E2  645A               	cpfsgt	setup@index_192,c
   342  0001E4  D7F0               	goto	l725
   343                           
   344                           ;main.c: 60: }
   345                           ;main.c: 61: for (unsigned char index = 0; index < 10; index++)
   346  0001E6  0E00               	movlw	0
   347  0001E8  6E5B               	movwf	setup@index_193,c
   348  0001EA  D00B               	goto	L3
   349  0001EC                     l737:
   350                           
   351                           ;main.c: 62: {
   352                           ;main.c: 63: b_value[index] = 0;
   353  0001EC  505B               	movf	setup@index_193,w,c
   354  0001EE  0D01               	mullw	1
   355  0001F0  0E29               	movlw	low _b_value
   356  0001F2  24F3               	addwf	prodl,w,c
   357  0001F4  6ED9               	movwf	fsr2l,c
   358  0001F6  0E00               	movlw	high _b_value
   359  0001F8  20F4               	addwfc	prodh,w,c
   360  0001FA  6EDA               	movwf	fsr2h,c
   361  0001FC  0E00               	movlw	0
   362  0001FE  6EDF               	movwf	indf2,c
   363  000200  2A5B               	incf	setup@index_193,f,c
   364  000202                     L3:
   365  000202  0E09               	movlw	9
   366  000204  645B               	cpfsgt	setup@index_193,c
   367  000206  D7F2               	goto	l737
   368  000208  0012               	return	
   369  00020A                     __end_of_setup:
   370                           	opt stack 0
   371                           prodh	equ	0xFF4
   372                           prodl	equ	0xFF3
   373                           postinc0	equ	0xFEE
   374                           wreg	equ	0xFE8
   375                           indf2	equ	0xFDF
   376                           postinc2	equ	0xFDE
   377                           postdec2	equ	0xFDD
   378                           fsr2h	equ	0xFDA
   379                           fsr2l	equ	0xFD9
   380                           
   381 ;; *************** function _low_interrupt *****************
   382 ;; Defined at:
   383 ;;		line 32 in file "main.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;		None               void
   390 ;; Registers used:
   391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   397 ;;      Params:         0       0       0       0       0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0       0       0       0       0
   399 ;;      Temps:         17       0       0       0       0       0       0       0       0
   400 ;;      Totals:        17       0       0       0       0       0       0       0       0
   401 ;;Total ram usage:       17 bytes
   402 ;; Hardware stack levels used:    1
   403 ;; Hardware stack levels required when called:    2
   404 ;; This function calls:
   405 ;;		___awmod
   406 ;; This function is called by:
   407 ;;		Interrupt level 1
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           	psect	intcodelo
   412  000018                     __pintcodelo:
   413                           	opt stack 0
   414  000018                     _low_interrupt:
   415                           	opt stack 27
   416                           
   417                           ;incstack = 0
   418  000018  CFD8 F03A          	movff	status,??_low_interrupt
   419  00001C  CFE8 F03B          	movff	wreg,??_low_interrupt+1
   420  000020  CFE0 F03C          	movff	bsr,??_low_interrupt+2
   421  000024  CFFA F03D          	movff	pclath,??_low_interrupt+3
   422  000028  CFFB F03E          	movff	pclatu,??_low_interrupt+4
   423  00002C  CFE9 F03F          	movff	fsr0l,??_low_interrupt+5
   424  000030  CFEA F040          	movff	fsr0h,??_low_interrupt+6
   425  000034  CFE1 F041          	movff	fsr1l,??_low_interrupt+7
   426  000038  CFE2 F042          	movff	fsr1h,??_low_interrupt+8
   427  00003C  CFD9 F043          	movff	fsr2l,??_low_interrupt+9
   428  000040  CFDA F044          	movff	fsr2h,??_low_interrupt+10
   429  000044  CFF3 F045          	movff	prodl,??_low_interrupt+11
   430  000048  CFF4 F046          	movff	prodh,??_low_interrupt+12
   431  00004C  CFF6 F047          	movff	tblptrl,??_low_interrupt+13
   432  000050  CFF7 F048          	movff	tblptrh,??_low_interrupt+14
   433  000054  CFF8 F049          	movff	tblptru,??_low_interrupt+15
   434  000058  CFF5 F04A          	movff	tablat,??_low_interrupt+16
   435                           
   436                           ;main.c: 34: if (INTCONbits.RBIF == 1)
   437  00005C  A0F2               	btfss	intcon,0,c	;volatile
   438  00005E  D017               	goto	i1l825
   439                           
   440                           ;main.c: 35: {
   441                           ;main.c: 36: INTCONbits.RBIF = 0;
   442  000060  90F2               	bcf	intcon,0,c	;volatile
   443                           
   444                           ;main.c: 37: b_value[b_buf_ptr] = PORTB;
   445  000062  5033               	movf	_b_buf_ptr,w,c
   446  000064  0D01               	mullw	1
   447  000066  0E29               	movlw	low _b_value
   448  000068  24F3               	addwf	prodl,w,c
   449  00006A  6ED9               	movwf	fsr2l,c
   450  00006C  0E00               	movlw	high _b_value
   451  00006E  20F4               	addwfc	prodh,w,c
   452  000070  6EDA               	movwf	fsr2h,c
   453  000072  CF81 FFDF          	movff	3969,indf2	;volatile
   454                           
   455                           ;main.c: 38: b_buf_ptr = ++b_buf_ptr % 10;
   456  000076  2A33               	incf	_b_buf_ptr,f,c
   457  000078  C033  F034         	movff	_b_buf_ptr,___awmod@dividend
   458  00007C  6A35               	clrf	___awmod@dividend+1,c
   459  00007E  0E00               	movlw	0
   460  000080  6E37               	movwf	___awmod@divisor+1,c
   461  000082  0E0A               	movlw	10
   462  000084  6E36               	movwf	___awmod@divisor,c
   463  000086  EC85  F000         	call	___awmod	;wreg free
   464  00008A  5034               	movf	?___awmod,w,c
   465  00008C  6E33               	movwf	_b_buf_ptr,c
   466  00008E                     i1l825:
   467                           
   468                           ;main.c: 39: }
   469                           ;main.c: 40: if (INTCONbits.INT0IF == 1)
   470  00008E  A2F2               	btfss	intcon,1,c	;volatile
   471  000090  D017               	goto	i1l34
   472                           
   473                           ;main.c: 41: {
   474                           ;main.c: 42: INTCONbits.INT0IF = 0;
   475  000092  92F2               	bcf	intcon,1,c	;volatile
   476                           
   477                           ;main.c: 43: b_value[b_buf_ptr] = PORTB;
   478  000094  5033               	movf	_b_buf_ptr,w,c
   479  000096  0D01               	mullw	1
   480  000098  0E29               	movlw	low _b_value
   481  00009A  24F3               	addwf	prodl,w,c
   482  00009C  6ED9               	movwf	fsr2l,c
   483  00009E  0E00               	movlw	high _b_value
   484  0000A0  20F4               	addwfc	prodh,w,c
   485  0000A2  6EDA               	movwf	fsr2h,c
   486  0000A4  CF81 FFDF          	movff	3969,indf2	;volatile
   487                           
   488                           ;main.c: 44: b_buf_ptr = ++b_buf_ptr % 10;
   489  0000A8  2A33               	incf	_b_buf_ptr,f,c
   490  0000AA  C033  F034         	movff	_b_buf_ptr,___awmod@dividend
   491  0000AE  6A35               	clrf	___awmod@dividend+1,c
   492  0000B0  0E00               	movlw	0
   493  0000B2  6E37               	movwf	___awmod@divisor+1,c
   494  0000B4  0E0A               	movlw	10
   495  0000B6  6E36               	movwf	___awmod@divisor,c
   496  0000B8  EC85  F000         	call	___awmod	;wreg free
   497  0000BC  5034               	movf	?___awmod,w,c
   498  0000BE  6E33               	movwf	_b_buf_ptr,c
   499  0000C0                     i1l34:
   500  0000C0  C04A  FFF5         	movff	??_low_interrupt+16,tablat
   501  0000C4  C049  FFF8         	movff	??_low_interrupt+15,tblptru
   502  0000C8  C048  FFF7         	movff	??_low_interrupt+14,tblptrh
   503  0000CC  C047  FFF6         	movff	??_low_interrupt+13,tblptrl
   504  0000D0  C046  FFF4         	movff	??_low_interrupt+12,prodh
   505  0000D4  C045  FFF3         	movff	??_low_interrupt+11,prodl
   506  0000D8  C044  FFDA         	movff	??_low_interrupt+10,fsr2h
   507  0000DC  C043  FFD9         	movff	??_low_interrupt+9,fsr2l
   508  0000E0  C042  FFE2         	movff	??_low_interrupt+8,fsr1h
   509  0000E4  C041  FFE1         	movff	??_low_interrupt+7,fsr1l
   510  0000E8  C040  FFEA         	movff	??_low_interrupt+6,fsr0h
   511  0000EC  C03F  FFE9         	movff	??_low_interrupt+5,fsr0l
   512  0000F0  C03E  FFFB         	movff	??_low_interrupt+4,pclatu
   513  0000F4  C03D  FFFA         	movff	??_low_interrupt+3,pclath
   514  0000F8  C03C  FFE0         	movff	??_low_interrupt+2,bsr
   515  0000FC  C03B  FFE8         	movff	??_low_interrupt+1,wreg
   516  000100  C03A  FFD8         	movff	??_low_interrupt,status
   517  000104  0010               	retfie	
   518  000106                     __end_of_low_interrupt:
   519                           	opt stack 0
   520                           pclatu	equ	0xFFB
   521                           pclath	equ	0xFFA
   522                           tblptru	equ	0xFF8
   523                           tblptrh	equ	0xFF7
   524                           tblptrl	equ	0xFF6
   525                           tablat	equ	0xFF5
   526                           prodh	equ	0xFF4
   527                           prodl	equ	0xFF3
   528                           intcon	equ	0xFF2
   529                           postinc0	equ	0xFEE
   530                           fsr0h	equ	0xFEA
   531                           fsr0l	equ	0xFE9
   532                           wreg	equ	0xFE8
   533                           fsr1h	equ	0xFE2
   534                           fsr1l	equ	0xFE1
   535                           bsr	equ	0xFE0
   536                           indf2	equ	0xFDF
   537                           postinc2	equ	0xFDE
   538                           postdec2	equ	0xFDD
   539                           fsr2h	equ	0xFDA
   540                           fsr2l	equ	0xFD9
   541                           status	equ	0xFD8
   542                           
   543 ;; *************** function ___awmod *****************
   544 ;; Defined at:
   545 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;  dividend        2    0[COMRAM] int 
   548 ;;  divisor         2    2[COMRAM] int 
   549 ;; Auto vars:     Size  Location     Type
   550 ;;  sign            1    5[COMRAM] unsigned char 
   551 ;;  counter         1    4[COMRAM] unsigned char 
   552 ;; Return value:  Size  Location     Type
   553 ;;                  2    0[COMRAM] int 
   554 ;; Registers used:
   555 ;;		wreg, status,2, status,0, prodl
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   561 ;;      Params:         4       0       0       0       0       0       0       0       0
   562 ;;      Locals:         2       0       0       0       0       0       0       0       0
   563 ;;      Temps:          0       0       0       0       0       0       0       0       0
   564 ;;      Totals:         6       0       0       0       0       0       0       0       0
   565 ;;Total ram usage:        6 bytes
   566 ;; Hardware stack levels used:    1
   567 ;; Hardware stack levels required when called:    1
   568 ;; This function calls:
   569 ;;		Nothing
   570 ;; This function is called by:
   571 ;;		_low_interrupt
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           	psect	text4
   576  00010A                     __ptext4:
   577                           	opt stack 0
   578  00010A                     ___awmod:
   579                           	opt stack 27
   580                           
   581                           ;incstack = 0
   582  00010A  0E00               	movlw	0
   583  00010C  6E39               	movwf	___awmod@sign,c
   584  00010E  5035               	movf	___awmod@dividend+1,w,c
   585  000110  0A80               	xorlw	128
   586  000112  6EF3               	movwf	prodl,c
   587  000114  0E80               	movlw	128
   588  000116  5CF3               	subwf	prodl,w,c
   589  000118  0E00               	movlw	0
   590  00011A  B4D8               	btfsc	status,2,c
   591  00011C  5C34               	subwf	___awmod@dividend,w,c
   592  00011E  B0D8               	btfsc	status,0,c
   593  000120  D006               	goto	i1l783
   594  000122  6C34               	negf	___awmod@dividend,c
   595  000124  1E35               	comf	___awmod@dividend+1,f,c
   596  000126  B0D8               	btfsc	status,0,c
   597  000128  2A35               	incf	___awmod@dividend+1,f,c
   598  00012A  0E01               	movlw	1
   599  00012C  6E39               	movwf	___awmod@sign,c
   600  00012E                     i1l783:
   601  00012E  5037               	movf	___awmod@divisor+1,w,c
   602  000130  0A80               	xorlw	128
   603  000132  6EF3               	movwf	prodl,c
   604  000134  0E80               	movlw	128
   605  000136  5CF3               	subwf	prodl,w,c
   606  000138  0E00               	movlw	0
   607  00013A  B4D8               	btfsc	status,2,c
   608  00013C  5C36               	subwf	___awmod@divisor,w,c
   609  00013E  B0D8               	btfsc	status,0,c
   610  000140  D004               	goto	i1l787
   611  000142  6C36               	negf	___awmod@divisor,c
   612  000144  1E37               	comf	___awmod@divisor+1,f,c
   613  000146  B0D8               	btfsc	status,0,c
   614  000148  2A37               	incf	___awmod@divisor+1,f,c
   615  00014A                     i1l787:
   616  00014A  5037               	movf	___awmod@divisor+1,w,c
   617  00014C  1036               	iorwf	___awmod@divisor,w,c
   618  00014E  B4D8               	btfsc	status,2,c
   619  000150  D018               	goto	i1l803
   620  000152  0E01               	movlw	1
   621  000154  6E38               	movwf	___awmod@counter,c
   622  000156  D004               	goto	i1l793
   623  000158                     i1l791:
   624  000158  90D8               	bcf	status,0,c
   625  00015A  3636               	rlcf	___awmod@divisor,f,c
   626  00015C  3637               	rlcf	___awmod@divisor+1,f,c
   627  00015E  2A38               	incf	___awmod@counter,f,c
   628  000160                     i1l793:
   629  000160  AE37               	btfss	___awmod@divisor+1,7,c
   630  000162  D7FA               	goto	i1l791
   631  000164                     i1l795:
   632  000164  5036               	movf	___awmod@divisor,w,c
   633  000166  5C34               	subwf	___awmod@dividend,w,c
   634  000168  5037               	movf	___awmod@divisor+1,w,c
   635  00016A  5835               	subwfb	___awmod@dividend+1,w,c
   636  00016C  A0D8               	btfss	status,0,c
   637  00016E  D004               	goto	i1l799
   638  000170  5036               	movf	___awmod@divisor,w,c
   639  000172  5E34               	subwf	___awmod@dividend,f,c
   640  000174  5037               	movf	___awmod@divisor+1,w,c
   641  000176  5A35               	subwfb	___awmod@dividend+1,f,c
   642  000178                     i1l799:
   643  000178  90D8               	bcf	status,0,c
   644  00017A  3237               	rrcf	___awmod@divisor+1,f,c
   645  00017C  3236               	rrcf	___awmod@divisor,f,c
   646  00017E  2E38               	decfsz	___awmod@counter,f,c
   647  000180  D7F1               	goto	i1l795
   648  000182                     i1l803:
   649  000182  5039               	movf	___awmod@sign,w,c
   650  000184  B4D8               	btfsc	status,2,c
   651  000186  D004               	goto	i1l807
   652  000188  6C34               	negf	___awmod@dividend,c
   653  00018A  1E35               	comf	___awmod@dividend+1,f,c
   654  00018C  B0D8               	btfsc	status,0,c
   655  00018E  2A35               	incf	___awmod@dividend+1,f,c
   656  000190                     i1l807:
   657  000190  C034  F034         	movff	___awmod@dividend,?___awmod
   658  000194  C035  F035         	movff	___awmod@dividend+1,?___awmod+1
   659  000198  0012               	return	
   660  00019A                     __end_of___awmod:
   661                           	opt stack 0
   662                           pclatu	equ	0xFFB
   663                           pclath	equ	0xFFA
   664                           tblptru	equ	0xFF8
   665                           tblptrh	equ	0xFF7
   666                           tblptrl	equ	0xFF6
   667                           tablat	equ	0xFF5
   668                           prodh	equ	0xFF4
   669                           prodl	equ	0xFF3
   670                           intcon	equ	0xFF2
   671                           postinc0	equ	0xFEE
   672                           fsr0h	equ	0xFEA
   673                           fsr0l	equ	0xFE9
   674                           wreg	equ	0xFE8
   675                           fsr1h	equ	0xFE2
   676                           fsr1l	equ	0xFE1
   677                           bsr	equ	0xFE0
   678                           indf2	equ	0xFDF
   679                           postinc2	equ	0xFDE
   680                           postdec2	equ	0xFDD
   681                           fsr2h	equ	0xFDA
   682                           fsr2l	equ	0xFD9
   683                           status	equ	0xFD8
   684                           
   685 ;; *************** function _high_interrupt *****************
   686 ;; Defined at:
   687 ;;		line 19 in file "main.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;		None               void
   694 ;; Registers used:
   695 ;;		None
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   701 ;;      Params:         0       0       0       0       0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0       0       0
   703 ;;      Temps:         14       0       0       0       0       0       0       0       0
   704 ;;      Totals:        14       0       0       0       0       0       0       0       0
   705 ;;Total ram usage:       14 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; This function calls:
   708 ;;		Nothing
   709 ;; This function is called by:
   710 ;;		Interrupt level 2
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	intcode
   715  000008                     __pintcode:
   716                           	opt stack 0
   717  000008                     _high_interrupt:
   718                           	opt stack 27
   719                           
   720                           ;incstack = 0
   721  000008  CFFA F04B          	movff	pclath,??_high_interrupt
   722  00000C  CFFB F04C          	movff	pclatu,??_high_interrupt+1
   723  000010  CFE9 F04D          	movff	fsr0l,??_high_interrupt+2
   724  000014  ED05  F001         	call	int_func,f	;refresh shadow registers
   725                           pclatu	equ	0xFFB
   726                           pclath	equ	0xFFA
   727                           tblptru	equ	0xFF8
   728                           tblptrh	equ	0xFF7
   729                           tblptrl	equ	0xFF6
   730                           tablat	equ	0xFF5
   731                           prodh	equ	0xFF4
   732                           prodl	equ	0xFF3
   733                           intcon	equ	0xFF2
   734                           postinc0	equ	0xFEE
   735                           fsr0h	equ	0xFEA
   736                           fsr0l	equ	0xFE9
   737                           wreg	equ	0xFE8
   738                           fsr1h	equ	0xFE2
   739                           fsr1l	equ	0xFE1
   740                           bsr	equ	0xFE0
   741                           indf2	equ	0xFDF
   742                           postinc2	equ	0xFDE
   743                           postdec2	equ	0xFDD
   744                           fsr2h	equ	0xFDA
   745                           fsr2l	equ	0xFD9
   746                           status	equ	0xFD8
   747                           
   748                           	psect	intcode_body
   749  00020A                     __pintcode_body:
   750                           	opt stack 27
   751  00020A                     int_func:
   752                           	opt stack 27
   753  00020A  0006               	pop		; remove dummy address from shadow register refresh
   754  00020C  CFEA F04E          	movff	fsr0h,??_high_interrupt+3
   755  000210  CFE1 F04F          	movff	fsr1l,??_high_interrupt+4
   756  000214  CFE2 F050          	movff	fsr1h,??_high_interrupt+5
   757  000218  CFD9 F051          	movff	fsr2l,??_high_interrupt+6
   758  00021C  CFDA F052          	movff	fsr2h,??_high_interrupt+7
   759  000220  CFF3 F053          	movff	prodl,??_high_interrupt+8
   760  000224  CFF4 F054          	movff	prodh,??_high_interrupt+9
   761  000228  CFF6 F055          	movff	tblptrl,??_high_interrupt+10
   762  00022C  CFF7 F056          	movff	tblptrh,??_high_interrupt+11
   763  000230  CFF8 F057          	movff	tblptru,??_high_interrupt+12
   764  000234  CFF5 F058          	movff	tablat,??_high_interrupt+13
   765                           
   766                           ;main.c: 21: if (PIR1bits.TMR1IF == 1)
   767  000238  B09E               	btfsc	3998,0,c	;volatile
   768                           
   769                           ;main.c: 22: {
   770                           ;main.c: 23: PIR1bits.TMR1IF = 0;
   771  00023A  909E               	bcf	3998,0,c	;volatile
   772                           
   773                           ;main.c: 24: }
   774                           ;main.c: 25: if (PIR1bits.TMR2IF == 1)
   775  00023C  B29E               	btfsc	3998,1,c	;volatile
   776                           
   777                           ;main.c: 26: {
   778                           ;main.c: 27: PIR1bits.TMR2IF = 0;
   779  00023E  929E               	bcf	3998,1,c	;volatile
   780  000240  C058  FFF5         	movff	??_high_interrupt+13,tablat
   781  000244  C057  FFF8         	movff	??_high_interrupt+12,tblptru
   782  000248  C056  FFF7         	movff	??_high_interrupt+11,tblptrh
   783  00024C  C055  FFF6         	movff	??_high_interrupt+10,tblptrl
   784  000250  C054  FFF4         	movff	??_high_interrupt+9,prodh
   785  000254  C053  FFF3         	movff	??_high_interrupt+8,prodl
   786  000258  C052  FFDA         	movff	??_high_interrupt+7,fsr2h
   787  00025C  C051  FFD9         	movff	??_high_interrupt+6,fsr2l
   788  000260  C050  FFE2         	movff	??_high_interrupt+5,fsr1h
   789  000264  C04F  FFE1         	movff	??_high_interrupt+4,fsr1l
   790  000268  C04E  FFEA         	movff	??_high_interrupt+3,fsr0h
   791  00026C  C04D  FFE9         	movff	??_high_interrupt+2,fsr0l
   792  000270  C04C  FFFB         	movff	??_high_interrupt+1,pclatu
   793  000274  C04B  FFFA         	movff	??_high_interrupt,pclath
   794  000278  0011               	retfie		f
   795  00027A                     __end_of_high_interrupt:
   796                           	opt stack 0
   797  0000                     pclatu	equ	0xFFB
   798                           pclath	equ	0xFFA
   799                           tblptru	equ	0xFF8
   800                           tblptrh	equ	0xFF7
   801                           tblptrl	equ	0xFF6
   802                           tablat	equ	0xFF5
   803                           prodh	equ	0xFF4
   804                           prodl	equ	0xFF3
   805                           intcon	equ	0xFF2
   806                           postinc0	equ	0xFEE
   807                           fsr0h	equ	0xFEA
   808                           fsr0l	equ	0xFE9
   809                           wreg	equ	0xFE8
   810                           fsr1h	equ	0xFE2
   811                           fsr1l	equ	0xFE1
   812                           bsr	equ	0xFE0
   813                           indf2	equ	0xFDF
   814                           postinc2	equ	0xFDE
   815                           postdec2	equ	0xFDD
   816                           fsr2h	equ	0xFDA
   817                           fsr2l	equ	0xFD9
   818                           status	equ	0xFD8
   819                           pclatu	equ	0xFFB
   820                           pclath	equ	0xFFA
   821                           tblptru	equ	0xFF8
   822                           tblptrh	equ	0xFF7
   823                           tblptrl	equ	0xFF6
   824                           tablat	equ	0xFF5
   825                           prodh	equ	0xFF4
   826                           prodl	equ	0xFF3
   827                           intcon	equ	0xFF2
   828                           postinc0	equ	0xFEE
   829                           fsr0h	equ	0xFEA
   830                           fsr0l	equ	0xFE9
   831                           wreg	equ	0xFE8
   832                           fsr1h	equ	0xFE2
   833                           fsr1l	equ	0xFE1
   834                           bsr	equ	0xFE0
   835                           indf2	equ	0xFDF
   836                           postinc2	equ	0xFDE
   837                           postdec2	equ	0xFDD
   838                           fsr2h	equ	0xFDA
   839                           fsr2l	equ	0xFD9
   840                           status	equ	0xFD8
   841                           
   842                           	psect	rparam
   843  0000                     pclatu	equ	0xFFB
   844                           pclath	equ	0xFFA
   845                           tblptru	equ	0xFF8
   846                           tblptrh	equ	0xFF7
   847                           tblptrl	equ	0xFF6
   848                           tablat	equ	0xFF5
   849                           prodh	equ	0xFF4
   850                           prodl	equ	0xFF3
   851                           intcon	equ	0xFF2
   852                           postinc0	equ	0xFEE
   853                           fsr0h	equ	0xFEA
   854                           fsr0l	equ	0xFE9
   855                           wreg	equ	0xFE8
   856                           fsr1h	equ	0xFE2
   857                           fsr1l	equ	0xFE1
   858                           bsr	equ	0xFE0
   859                           indf2	equ	0xFDF
   860                           postinc2	equ	0xFDE
   861                           postdec2	equ	0xFDD
   862                           fsr2h	equ	0xFDA
   863                           fsr2l	equ	0xFD9
   864                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         251
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      91
    BANK0           160      0       0
    BANK1           256      0     200
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_setup

Critical Paths under _high_interrupt in COMRAM

    None.

Critical Paths under _low_interrupt in COMRAM

    _low_interrupt->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_interrupt in BANK0

    None.

Critical Paths under _low_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_interrupt in BANK1

    None.

Critical Paths under _low_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_interrupt in BANK2

    None.

Critical Paths under _low_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_interrupt in BANK3

    None.

Critical Paths under _low_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_interrupt in BANK4

    None.

Critical Paths under _low_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_interrupt in BANK5

    None.

Critical Paths under _low_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_interrupt in BANK6

    None.

Critical Paths under _low_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_interrupt in BANK7

    None.

Critical Paths under _low_interrupt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     135
                              _setup
                             _tmr2On
 ---------------------------------------------------------------------------------
 (1) _tmr2On                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0     135
                                             37 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_interrupt                                       17    17      0     331
                                              6 COMRAM    17    17      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     331
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_interrupt                                      14    14      0       0
                                             23 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _tmr2On

 _low_interrupt (ROOT)
   ___awmod

 _high_interrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     28      5B       1       95.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     123      20        0.0%
DATA                 0      0     123       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sat Jul 19 15:21:24 2014

                     l46 02A0                       bsr 000FE0          ?_high_interrupt 0034  
                    l713 01A0                      l725 01C6                      l737 01EC  
           __CFG_BOR$OFF 000000             ___awmod@sign 0039                      prod 000FF3  
                    wreg 000FE8             __CFG_IESO$ON 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     i1l34 00C0                     _TMR2 000FCC  
           __CFG_PWRT$ON 000000            __CFG_FCMEN$ON 000000                     _main 0298  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr0l 000FE9  
                   fsr2h 000FDA                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9                     pclat 000FFA                     prodh 000FF4  
                   prodl 000FF3                     start 0106            __CFG_MCLRE$ON 000000  
                  ?_main 0034          __end_of___awmod 019A                    _T1CON 000FCD  
                  _T2CON 000FCA                    i1l803 0182                    i1l807 0190  
                  i1l825 008E                    i1l791 0158                    i1l783 012E  
                  i1l793 0160                    i1l795 0164                    i1l787 014A  
                  i1l799 0178                    _TMR1H 000FCF                    _TMR1L 000FCE  
                  _PORTB 000F81                    _PORTD 000F83            __CFG_USBDIV$2 000000  
                  _TRISB 000F93                    _TRISD 000F95                    _setup 019A  
                  tablat 000FF5                    status 000FD8          __initialization 027A  
           __end_of_main 02A2                   ??_main 005C            __activetblptr 000000  
         __CFG_PLLDIV$12 000000                   ?_setup 0034                   _OSCCON 000FD3  
  __end_of_low_interrupt 0106           __CFG_STVREN$ON 000000                ??___awmod 0038  
                 clear_0 0280                   clear_1 028C                   _tmr2On 02A2  
        ___awmod@divisor 0036          ___awmod@counter 0038                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0292          __CFG_PBADEN$OFF 000000         ??_high_interrupt 004B  
         __pcstackCOMRAM 0034            __end_of_setup 020A                  ??_setup 0059  
             __pbssBANK1 0100                  ?_tmr2On 0034                  _OSCTUNE 000F9B  
           _block_coding 0100                  __Hparam 0000                  __Lparam 0000  
                ___awmod 010A                  _b_value 0029                  __pcinit 027A  
                __ramtop 0800          __size_of_tmr2On 0004                  __ptext0 0298  
                __ptext1 02A2                  __ptext2 019A                  __ptext4 010A  
              _T1CONbits 000FCD                _T2CONbits 000FCA         ___awmod@dividend 0034  
         __pintcode_body 020A     end_of_initialization 0292                  int_func 020A  
                postdec2 000FDD                  postinc0 000FEE                  postinc2 000FDE  
         __end_of_tmr2On 02A6      start_initialization 027A   __size_of_low_interrupt 00EE  
               ??_tmr2On 0059           _current_height 0001              __pbssCOMRAM 0001  
              _b_buf_ptr 0033            _low_interrupt 0018                __pintcode 0008  
               ?___awmod 0034              __pintcodelo 0018  __size_of_high_interrupt 0272  
         __size_of_setup 0070                 _IPR1bits 000F9F                 _PIE1bits 000F9D  
         ?_low_interrupt 0034                 _PIR1bits 000F9E                 _RCONbits 000FD0  
             setup@index 0059              _INTCON2bits 000FF1                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awmod 0090     __CFG_FOSC$ECPLLIO_EC 000000  
          __size_of_main 000A          ??_low_interrupt 003A    __CFG_CPUDIV$OSC1_PLL2 000000  
         _high_interrupt 0008               _INTCONbits 000FF2                 intlevel1 0000  
               intlevel2 0000   __end_of_high_interrupt 027A           setup@index_192 005A  
         setup@index_193 005B  
